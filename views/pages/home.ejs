<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat-Application</title>
    <link rel="stylesheet" href="../../stylesheet/home.css" />
  </head>
  <body>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      var socket = io();
    </script>
    <section class="app-conatiner">
      <section class="left-conatier">
        <div class="left-wrapper">
          <div class="room-id-conatiner">
            <h2>Room ID:</h2>
            <p class="room-id-value">abhi10656</p>
          </div>
          <div class="users-conatiner">
            <h2>Active Users:</h2>
            <div class="username-conatiner">
            </div>
          </div>
        </div>
      </section>
      <section class="Chat-Application-conatiner">
        <div class="message-container">
          <div class="message-wrapper">
          </div>
        </div>
        <div class="textbox-conatiner">
          <form id="userChatbox" onsubmit="handleChatSubmit(event)">
            <div class="text-conatiners">
              <input
                type="text"
                name="message"
                placeholder="message"
                autocomplete="off"
              />
              <button type="submit">send</button>
            </div>
          </form>
        </div>
      </section>
    </section>
    <script>
      const url = window.location.search;
      const urlparams = new URLSearchParams(url);
      const username = urlparams.get("username");
      const roomID = urlparams.get("room_id");
      const msgContainer = document.querySelector(".message-container");
      const usercontainer = document.querySelector(".username-conatiner");

      socket.emit("join", { username, roomID }, (error) => {
        if (error) {
          alert(error);
          location.href = "/";
        }
      });

      function handleChatSubmit(e) {
        e.preventDefault();
        const inputElement = document.querySelector("#userChatbox input");
        socket.emit("send-message", inputElement.value);
        msgContainer.innerHTML += `<div class="each-msg-container your-msg">
            <p class="others-message">${inputElement.value}</p>
          </div>`;
        inputElement.value = "";
      }

      socket.on("recevied-message", (mes, username) => {
        console.log(mes, "message");
        msgContainer.innerHTML += `<div class="each-msg-container">
          <p class="username-tag">${username}</p>
            <p class="others-message">${mes}</p>
          </div>`;
      });

<<<<<<< HEAD
      socket.on("userDisconnected", () => {
        console.log("user disconnected");
      });

      socket.on('welcome',(mes)=>{
        msgContainer.innerHTML += `<div class="admin-container"><h1>Admin</h1><p>Welcome ${mes}!</p></div>`
      });

      socket.on("usersList", (data) => {
        usercontainer.innerHTML = "";
        data.forEach((eachName) => {
          usercontainer.innerHTML += `<p>${eachName}</p>`;
        });
      });
      
      socket.on("userNames", (data) => {
        usercontainer.innerHTML = "";
        data.forEach((eachName) => {
          usercontainer.innerHTML += `<p>${eachName}</p>`;
        });
      });
=======
      socket.on('send-message',(mes)=>{
        console.log(mes,"message");
      })

      socket.on('userDisconnected',()=>{
        console.log('user disconnected')
      })
>>>>>>> a88f50e0fc680e9f7525d3d9d2e36edc6e5eae1b
    </script>
  </body>
</html>
